buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'maven'
apply plugin: 'java'

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}-B" + System.getenv("BUILD_NUMBER")
group= "com.teambr.bookshelf" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Bookshelf"

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
    version = config.minecraft_version + "-" + config.forge_version + "-" + config.minecraft_version

    replaceIn "Constants.java"
    replace "@VERSION@", "${config.mod_version}"

    runDir = "eclipse"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar, dependsOn: 'classes') {
    from(sourceSets.main.output) {
        include '**'
    }
    extension = 'jar'
    classifier = 'dev'
}

//task myJavadocs(type: Javadoc) {
//    source = sourceSets.main.allJava
//}

task javadocJar(type: Zip, dependsOn: javadoc) {
    classifier = 'javadoc'
    into 'build/libs'
}

task sourceJar(type: Zip, dependsOn: "sourceMainJava") {
    from 'build/sources/java'
    classifier = 'sources'
}

artifacts {
    archives devJar
    archives javadocJar
    archives sourceJar
}

configurations {
    deployerJars
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
    compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.ccc_version}:dev"
    compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.CCLIB_version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.NEI_version}:dev"
    compile "mcp.mobius.waila:Waila:${config.WAILA_version}_${config.minecraft_version}:dev"
}

repositories {
    mavenCentral()
    maven { // the repo from which to get NEI and stuff
        name "CB Repo"
        url "http://chickenbones.net/maven/"
    }
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: System.properties['URL']) {
                authentication(userName: System.properties['HTTPUSERNAME'], password: System.properties['HTTPPASSWORD'])
            }

            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName

                pom.project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'Bookshelf'
                    url 'https://github.com/TeamBR-Modding/Bookshelf'
                    scm {
                        url 'https://github.com/TeamBR-Modding/Bookshelf'
                        connection 'scm:git:git@github.com/TeamBR-Modding/Bookshelf.git'
                        developerConnection 'scm:git:git@github.com/TeamBR-Modding/Bookshelf.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/TeamBR-Modding/Bookshelf/issues'
                    }
                    licenses {
                        license {
                            name 'Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License'
                            url 'http://creativecommons.org/licenses/by-nc-sa/4.0/'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'Dyonovan'
                            name 'Dyonovan'
                            roles {
                                role 'developer'
                            }
                        }
                        developer {
                            id 'pauljoda'
                            name 'pauljoda'
                            roles {
                                role 'developer'
                            }
                        }
                    }
                }
            }
        }
    }
}

